@inherits ViewBase<MainViewModel>
@inject MainViewModel _viewModel

<Container Fluid Style="border-bottom:2px solid black">
    <Bar Breakpoint="Breakpoint.Desktop">
        <BarBrand>
            <Heading Size="HeadingSize.Is2">BaSta Game</Heading>
        </BarBrand>
        <BarMenu>
            <BarEnd>
                <BarItem>
                    <Blazorise.Button Color="Color.Danger">Reset </Blazorise.Button>
                </BarItem>
            </BarEnd>
        </BarMenu>
    </Bar>
</Container>

<div class="d-flex justify-content-evenly" style="padding-top: 1rem">

    <div>
        <div class="vstack">
            <Heading Size="HeadingSize.Is3" Style="text-align:center">Period</Heading>
            <div class="hstack gap-2">
                <Buttons Size="Size.ExtraLarge">
                    <Blazorise.Button Disabled Color="Color.Dark">Break </Blazorise.Button>
                    <Blazorise.Button Disabled Color="Color.Success" Style="width: 75px">1 </Blazorise.Button>
                    <Blazorise.Button Disabled Outline Color="Color.Dark">Game </Blazorise.Button>
                </Buttons>
                <Buttons Size="Size.Medium">
                    <Blazorise.Button Outline Color="Color.Danger" Style="height: 45px; width: 50px">
                        <Icon Name="IconName.ArrowLeft" />
                     </Blazorise.Button>
                    <Blazorise.Button Outline Color="Color.Danger" Style="height: 45px; width: 50px">
                        <Icon Name="IconName.ArrowRight" />
                    </Blazorise.Button>
                </Buttons>
            </div>
        </div>
    </div>

    <div class="vr" />
    
    <div>
        <div class="vstack">
            <Heading Size="HeadingSize.Is3" Style="text-align:center">Game Clock</Heading>
            <div class="hstack gap-2">
                <Buttons Size="Size.ExtraLarge">
                    <Blazorise.Button Disabled Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@GameClock.Clock.ToString(@"mm") </Blazorise.Button>
                    <Blazorise.Button Disabled Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@GameClock.Clock.ToString(@"ss") </Blazorise.Button>
                    <Blazorise.Button Disabled Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@(GameClock.Clock.Milliseconds / 100) </Blazorise.Button>
                </Buttons>
                <Buttons Size="Size.Medium">
                    <Blazorise.Button Style="height: 45px; width:50px" Clicked="GameClockButtonClicked" Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)">
                        <Icon Name="@(GameClock.IsRunning ? IconName.Pause : IconName.Play)" />
                     </Blazorise.Button>
                    <Blazorise.Button Style="height: 45px; width:50px" Color="Color.Dark" Outline>
                        <Icon Name="IconName.Edit" />
                     </Blazorise.Button>
                </Buttons>
            </div>
        </div>
    </div>

    <div class="vr" />
    
    <div>
        <div class="vstack">
            <Heading Size="HeadingSize.Is3" Style="text-align:center">Shot Clock</Heading>
            <div class="hstack gap-2">
                <Buttons Size="Size.ExtraLarge">
                    <Blazorise.Button Disabled Color="@(ShotClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@ShotClock.Clock.ToString(@"ss") </Blazorise.Button>
                    <Blazorise.Button Disabled Color="@(ShotClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@(ShotClock.Clock.Milliseconds / 100) </Blazorise.Button>
                </Buttons>
                <Buttons Size="Size.Medium">
                    <Blazorise.Button Style="height: 45px; width:50px" Clicked="GameClockButtonClicked" Color="@(ShotClock.IsRunning ? Color.Danger : Color.Success)">
                        <Icon Name="@(ShotClock.IsRunning ? IconName.Pause : IconName.Play)" />
                     </Blazorise.Button>
                    <Blazorise.Button Style="height: 45px; width:50px" Clicked="Reset24ButtonClicked" Outline Color="Color.Dark">
                        <Text TextWeight="TextWeight.Bold">24s</Text>
                     </Blazorise.Button>
                    <Blazorise.Button Style="height: 45px; width:50px" Clicked="Reset14ButtonClicked" Outline Color="Color.Dark">
                        <Text TextWeight="TextWeight.Bold">14s</Text>
                     </Blazorise.Button>
                    <Blazorise.Button Style="height: 45px; width:50px;" Clicked="ToggleShotClockVisible" Outline Color="Color.Dark" Background="@(shotClockVisible ? Background.Success : Background.Danger)">
                        <Icon Name="@(shotClockVisible ? IconName.Eye : IconName.EyeSlash)"/>
                     </Blazorise.Button>
                    <Blazorise.Button Style="height: 45px; width:50px" Color="Color.Dark" Outline>
                        <Icon Name="IconName.Edit" />
                     </Blazorise.Button>
                </Buttons>
            </div>
        </div>
    </div>
    
    <div class="vr" />

    <div>
        <div class="vstack">
            <Heading Size="HeadingSize.Is3" Style="text-align:center">Possession</Heading>
            <Buttons Size="Size.ExtraLarge">
                <Blazorise.Button Outline Color="Color.Success" Style="height: 54px; width: 75px">
                    <Icon Name="IconName.ArrowLeft" />
                 </Blazorise.Button>
                <Blazorise.Button Color="Color.Success" Style="height: 54px; width: 75px">
                    <Icon Name="IconName.ArrowRight" />
                 </Blazorise.Button>
            </Buttons>
        </div>
    </div>

</div>

<hr style="margin-left: 10px; margin-right: 10px"/>


@*<div class="d-flex justify-content-evenly">
    <div class="hstack gap-3">

    </div>
    <div class="hstack gap-3">

    </div>
    <div class="hstack gap-3">

    </div>
    </div>*@

@*<Row>
    <Column ColumnSize="ColumnSize.Is4">

    </Column>
    <Column ColumnSize="ColumnSize.Is4">

    </Column>
    <Column ColumnSize="ColumnSize.Is4">

    </Column>
    </Row>*@

@*
    <Row>
    <Column ColumnSize="ColumnSize.Is6">
    <Container>
    <Blazorise.Buttons>
    <Blazorise.Button Size="Size.ExtraLarge" Disabled Outline Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@GameClock.Clock.Minutes </Blazorise.Button>
    <Blazorise.Button Size="Size.ExtraLarge" Disabled Outline Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@GameClock.Clock.Seconds </Blazorise.Button>
    <Blazorise.Button Size="Size.ExtraLarge" Disabled Outline Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Style="width: 75px">@(GameClock.Clock.Milliseconds / 100) </Blazorise.Button>
    </Buttons>
    <Blazorise.Button Clicked="GameClockButtonClicked" Color="@(GameClock.IsRunning ? Color.Danger : Color.Success)" Outline>@(GameClock.IsRunning ? "Stop" : "Start") </Blazorise.Button>
    </Container>
    </Column>
    <Column ColumnSize="ColumnSize.Is6">
    <Container>
    <Blazorise.Buttons>
    </Buttons>
    <Blazorise.Button Clicked="Reset24ButtonClicked" Color="Color.Success" Outline>Reset 24s </Blazorise.Button>
    <Blazorise.Button Clicked="Reset14ButtonClicked" Color="Color.Success" Outline>Reset 14s </Blazorise.Button>
    </Container>
    </Column>
    </Row>*@

<Row>
    <Column ColumnSize="ColumnSize.Is6" Style="border-right: 1px solid rgba(0, 0, 0, .25)">
        <Container>
            <TeamView DataContext="@DataContext.Home"></TeamView>
        </Container>
    </Column>
    <Column ColumnSize="ColumnSize.Is6">
        <Container>
            <TeamView DataContext="@DataContext.Guest"></TeamView>
        </Container>
    </Column>
</Row>

@code
{
    DownClock GameClock;
    DownClock ShotClock;
    bool shotClockVisible = true;

    private void ToggleShotClockVisible()
    {
        shotClockVisible = !shotClockVisible;
        Console.WriteLine("Status changed: " + shotClockVisible);
    }

    protected override void OnInitialized()
    {
        DataContext = _viewModel;

        GameClock = new BaSta.Model.DownClock(TimeSpan.FromMinutes(10));
        GameClock.ClockChanged += OnGameClockChanged;

        ShotClock = new DownClock(TimeSpan.FromSeconds(24));
        ShotClock.ClockChanged += OnGameClockChanged;
    }

    private void OnGameClockChanged(object? sender, ShotClockStateChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    void GameClockButtonClicked()
    {
        GameClock.SetState(!GameClock.IsRunning);
        ShotClock.SetState(!ShotClock.IsRunning);
    }

    private void Reset24ButtonClicked()
    {
        ShotClock.Set24();
        ShotClock.SetState(GameClock.IsRunning);
    }

    private void Reset14ButtonClicked()
    {
        ShotClock.Set14();
        ShotClock.SetState(GameClock.IsRunning);
    }
}